\begin{thebibliography}{1}

\bibitem{temporalGraphs}
George B. Mertzios and Hendrik Molter and Rolf Niedermeier and Viktor Zamaraev and Philipp Zschoche,
\emph{Computing Maximum Matchings in Temporal Graphs},
37th International Symposium on Theoretical Aspects of Computer Science (STACS 2020), 2020
\bibitem{softmax}
Bolin Gao and Lacra Pavel, \emph{On the Properties of the Softmax Function with Application in Game
Theory and Reinforcement Learning}, CoRR, 2017
\bibitem{node2vec}
Aditya Grover and Jure Leskovec \emph{node2vec: Scalable Feature Learning for Networks}, CoRR, 2016
\bibitem{EmbeddingSummary}
Primož Godec \emph{Graph Embeddings — The Summary}\\
https://towardsdatascience.com/graph-embeddings-the-summary-cc6075aba007
Dec 31, 2018
\bibitem{sub2vec}
\bibitem{tdGraphEmbed: Temporal Dynamic Graph-Level Embedding}
Moran Beladev, Lior Rokach, Gilad Katz, Ido Guy, Kira Radinsky, \emph{tdGraphEmbed: Temporal Dynamic Graph-Level Embedding}, {CIKM} '20: The 29th {ACM} International Conference on Information and Knowledge Management, Virtual Event, Ireland, October 19-23, 2020

\end{thebibliography}


{
	"resource": "/C:/Users/Doo5i/Documents/git/TemporalGrpahEmbed/TemporalGraphEmbedding.tex",
	"owner": "LaTeX",
	"severity": 8,
	"message": "Paragraph ended before \\@citex was complete.\n<to be read again> \n",
	"source": "LaTeX",
	"startLineNumber": 305,
	"startColumn": 1,
	"endLineNumber": 305,
	"endColumn": 65536
}

The goal of this paper is to show, how such networks can be analyzed and which predictions can be made from the data that is available.
This analysis can be done using so-called \emph{temporal graph embedding}. Here, a graph gets transformed into either a vector field, with one vector describing one node out of the graph, or
the graph at a time \(t\) in its evolution. 
With these vectors, it is easier to train neural networks, as graphs are too complex of a structure for them. These can then be, in turn used to perform tasks like: node prediction, where the focus lies on prediction if an edge will form between two nodes and
node classification, with which nodes that share attributes can be labeled.
As there are different methods on how to achieve such an embedding of graphs into sets of vectors, this paper first gives an overview over the basic approaches with non-temporal graphs, to lay down a foundation. These methods can be used in a modified way to 
also work with temporal graphs. How two methods for temporal graphs work is shown in section 3 of this paper.
To finish of, in section 4, different applications for embedded temporal graphs are shown.


Until recent, it was only possible to work with graphs, which do not change over time. This represented a problem as a lot of real world networks are changing over time.  
This made the use of existing methods inefficient. To tackle this, different approaches have been proposed.

But as past structures influence their successors, this way of presenting 
networks makes its analysis inefficient. Thus, the use of temporal graphs, which capture the whole evolution, was proposed.


